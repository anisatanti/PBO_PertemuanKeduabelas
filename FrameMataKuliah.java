/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TM12;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.HashMap;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author LENOVO
 */
public class FrameMataKuliah extends javax.swing.JFrame {
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/Mata_Kuliah";
    String user = "postgres";
    String password = "1234";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);
    /**
     * Creates new form FrameMataKuliah
     */
    public FrameMataKuliah() {
        initComponents();
        koneksi();
        tampil();
    }

    public void koneksi() {
        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);
            System.out.println("Koneksi berhasil!");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Koneksi gagal!");
        }
    }
    
 
    private void tampil() {
         EntityManager em = Persistence.createEntityManagerFactory("PBO_PersistencePU").createEntityManager();
        
        try {
            Query query = em.createNamedQuery("Matakuliah.findAll");
            List<Matakuliah> resultList = query.getResultList();
            
            DefaultTableModel model = (DefaultTableModel) tblMK.getModel();
            model.setRowCount(0); 
            
            for (Matakuliah m : resultList) {
                Object[] baris = new Object[4];
                baris[0] = m.getKodemk();
                baris[1] = m.getSks();
                baris[2] = m.getNamamk();
                baris[3] = m.getSemesterajar();
                model.addRow(baris);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            em.close();
        }
    }
 private void peringatan(String pesan) {
        JOptionPane.showMessageDialog(this, pesan);
    }
 
    public void clear() {
        tfKode.setText("");
        tfSks.setText("");
        tfNamaMK.setText("");
        tfSmt.setText("");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfKode = new javax.swing.JTextField();
        tfSks = new javax.swing.JTextField();
        tfNamaMK = new javax.swing.JTextField();
        tfSmt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMK = new javax.swing.JTable();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel1.setText("DATA MATA KULIAH");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Kode MK");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nama MK");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("SKS");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Semester Ajar");

        tblMK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kode Mata Kuliah", "SKS", "Nama Mata Kuliah", "Semester Ajar"
            }
        ));
        tblMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMKMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMK);

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addGap(225, 225, 225))
                .addGroup(layout.createSequentialGroup()
                    .addGap(105, 105, 105)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnInsert))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(56, 56, 56)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tfKode, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                                        .addComponent(tfSks)
                                        .addComponent(tfNamaMK)
                                        .addComponent(tfSmt)))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnUpdate)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnDelete)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnClear)
                                    .addGap(12, 12, 12)
                                    .addComponent(btnCetak)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnUpload)))))
                    .addContainerGap(62, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(btnExit)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExit)
                .addGap(3, 3, 3)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfSks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNamaMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfSmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnCetak)
                    .addComponent(btnUpload))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
       try {
        tfKode.setEditable(true);
        if (tfKode.getText().isEmpty() || tfSks.getText().isEmpty() || tfNamaMK.getText().isEmpty() || tfSmt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Isi semua data!", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int sks, semesterAjar;
        try {
            sks = Integer.parseInt(tfSks.getText());
            semesterAjar = Integer.parseInt(tfSmt.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "SKS dan Semester Ajar harus berupa angka!", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        EntityManager entityManager = Persistence.createEntityManagerFactory("PBO_PersistencePU").createEntityManager();
        entityManager.getTransaction().begin();

        Matakuliah matakuliah = new Matakuliah();
        matakuliah.setKodemk(tfKode.getText());
        matakuliah.setSks(sks);
        matakuliah.setNamamk(tfNamaMK.getText());
        matakuliah.setSemesterajar(semesterAjar);

        entityManager.persist(matakuliah);
        entityManager.getTransaction().commit();
        tampil();
        JOptionPane.showMessageDialog(null, "Data Mata Kuliah berhasil ditambahkan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
     if (tfKode.getText().equals("") || tfNamaMK.getText().equals("") || tfSks.getText().equals("") || tfSmt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Isi semua data");
        } else {
            String kode, nama;
            kode = tfKode.getText();
            nama = tfNamaMK.getText();
            int sks, semester;
            try {
                sks = Integer.parseInt(tfSks.getText());
                semester = Integer.parseInt(tfSmt.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "SKS dan Semester harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("PBO_PersistencePU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();           
            Matakuliah mk = em.find(Matakuliah.class, kode);
            if (mk == null) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            } else {
                mk.setKodemk(kode);
                mk.setNamamk(nama);
                mk.setSks(sks);
                mk.setSemesterajar(semester);
                em.getTransaction().commit();
                tampil();
                JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
                em.close();
                emf.close();
                tfKode.setEditable(true); }}
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String kodeMK = tfKode.getText();
    if (kodeMK.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Kode MK diisi dulu yaa!", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }
    int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data dengan Kode MK: " + kodeMK + "?",
            "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        EntityManager entityManager = Persistence.createEntityManagerFactory("PBO_PersistencePU").createEntityManager();
        try {
            entityManager.getTransaction().begin();
            Matakuliah matakuliah = entityManager.find(Matakuliah.class, kodeMK);
            if (matakuliah != null) {
                entityManager.remove(matakuliah);
                entityManager.getTransaction().commit();
                tampil();
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Kode MK tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
                entityManager.getTransaction().rollback();
            }
        } catch (Exception e) {
            if (entityManager.getTransaction().isActive()) {
                entityManager.getTransaction().rollback();
            }
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            entityManager.close();
        }
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
    clear();
    tfKode.setEditable(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMKMouseClicked
        int row = tblMK.getSelectedRow();

        String kode = tblMK.getValueAt(row, 0).toString();
        String sks = tblMK.getValueAt(row, 1).toString();
        String namaMK = tblMK.getValueAt(row, 2).toString();
        String smt = tblMK.getValueAt(row, 3).toString();

        tfKode.setText(kode);
        tfSks.setText(sks);
        tfNamaMK.setText(namaMK);
        tfSmt.setText(smt);
        tfKode.setEditable(false);
    
    }//GEN-LAST:event_tblMKMouseClicked

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
     System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        try {
         String reportPath = "src/tm12/reportmatakuliah.jasper";
         HashMap<String, Object> parameters = new HashMap<>();
         JasperPrint print = JasperFillManager.fillReport( reportPath, parameters, conn);
         JasperViewer viewer = new JasperViewer(print, false);
         viewer.setVisible(true);
     }catch (Exception e){
         JOptionPane.showMessageDialog(null, e.getMessage());
     }
     
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("PBO_PersistencePU");
        EntityManager em = emf.createEntityManager();

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("File yang dipilih: " + filePilihan.getAbsolutePath());

            try (BufferedReader br = new BufferedReader(new FileReader(filePilihan))) {
                String baris;
                String pemisah = ";";

                while ((baris = br.readLine()) != null) {
                    String[] data = baris.split(pemisah);
                    if (data.length == 4) {
                        String kode = data[0].trim();
                        int sks = Integer.parseInt(data[1].trim());
                        String nama = data[2].trim();
                        int semester = Integer.parseInt(data[3].trim());

                        if (!kode.isEmpty() && !nama.isEmpty()) {
                            em.getTransaction().begin();

                            Matakuliah mk = new Matakuliah();
                            mk.setKodemk(kode);
                            mk.setNamamk(nama);
                            mk.setSemesterajar(semester);
                            mk.setSks(sks);

                            em.persist(mk);

                            em.getTransaction().commit();
                            JOptionPane.showMessageDialog(null, "Data Mata Kuliah dengan Kode " + kode + " berhasil diinput.");
                            tampil();  // Update tampilan tabel jika ada
                        } else {
                            JOptionPane.showMessageDialog(null, "Data tidak lengkap untuk Kode " + kode);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Format data tidak valid pada baris: " + baris);
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Matakuliah.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "File tidak ditemukan.");
            } catch (IOException ex) {
                Logger.getLogger(Matakuliah.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat membaca file.");
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Format angka tidak valid.");
            } finally {
                if (em.isOpen()) {
                    em.close();  // Pastikan EntityManager ditutup
                }
                if (emf.isOpen()) {
                    emf.close();  // Pastikan EntityManagerFactory ditutup
                }
            }
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMataKuliah().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMK;
    private javax.swing.JTextField tfKode;
    private javax.swing.JTextField tfNamaMK;
    private javax.swing.JTextField tfSks;
    private javax.swing.JTextField tfSmt;
    // End of variables declaration//GEN-END:variables
}
